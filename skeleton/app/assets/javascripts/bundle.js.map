{"version":3,"sources":["webpack/bootstrap 02052d4e82202d75820c","./frontend/twitter.js","./frontend/follow_toggle.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;;AAEA;AACA;AACA;AACA,IAAG;AACH,EAAC;;;;;;;ACND;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 02052d4e82202d75820c\n **/","const FollowToggle = require('./follow_toggle.js');\n\n$(() => {\n  $('.follow-toggle').each((i, el) => {\n    new FollowToggle($(el));\n  });\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./frontend/twitter.js\n ** module id = 0\n ** module chunks = 0\n **/","class FollowToggle {\n  constructor($el) {\n    this.el = $el;\n    this.userId = $el.data('user-id');\n    this.followState = $el.data('initial-follow-state');\n    this.render();\n\n    this.el.click(this.handleClick.bind(this));\n  }\n\n  render() {\n    let text = this.followState === 'followed' ? 'Unfollow!' : 'Follow!';\n\n    this.el.text(text);\n  }\n\n  handleClick(e) {\n    console.log('in click');\n    e.preventDefault();\n\n    switch (this.followState) {\n      case 'followed':\n        this.unFollow();\n        break;\n      case 'unfollowed':\n        this.follow();\n        break;\n    }\n  }\n\n  follow() {\n    this.makeRequest('POST', 'followed');\n  }\n\n  unFollow() {\n    this.makeRequest('DELETE', 'unfollowed');\n  }\n\n  makeRequest(type, followState) {\n    let that = this;\n    \n    $.ajax({\n      url: '/users/' + this.userId + '/follow',\n      type: type,\n      dataType: 'json',\n      success() {\n        that.followState = followState;\n        that.render();\n      }\n    });\n  }\n}\n\nmodule.exports = FollowToggle;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./frontend/follow_toggle.js\n ** module id = 1\n ** module chunks = 0\n **/"],"sourceRoot":""}